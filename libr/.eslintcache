[{"/home/kraven/Documents/BD/libr/src/index.tsx":"1","/home/kraven/Documents/BD/libr/src/reportWebVitals.ts":"2","/home/kraven/Documents/BD/libr/src/App.tsx":"3","/home/kraven/Documents/BD/libr/src/components/navigation/my-nav-bar.tsx":"4","/home/kraven/Documents/BD/libr/src/components/revervation/reservation.tsx":"5","/home/kraven/Documents/BD/libr/src/components/registration/my-form.tsx":"6","/home/kraven/Documents/BD/libr/src/components/rents/rents.tsx":"7","/home/kraven/Documents/BD/libr/src/components/rents/history-table.tsx":"8","/home/kraven/Documents/BD/libr/src/components/library-state/library-state.tsx":"9","/home/kraven/Documents/BD/libr/src/components/autor-modal/autor-modal.tsx":"10","/home/kraven/Documents/BD/new_folder/BD/libr/src/index.tsx":"11","/home/kraven/Documents/BD/new_folder/BD/libr/src/reportWebVitals.ts":"12","/home/kraven/Documents/BD/new_folder/BD/libr/src/App.tsx":"13","/home/kraven/Documents/BD/new_folder/BD/libr/src/components/navigation/my-nav-bar.tsx":"14","/home/kraven/Documents/BD/new_folder/BD/libr/src/components/revervation/reservation.tsx":"15","/home/kraven/Documents/BD/new_folder/BD/libr/src/components/rents/rents.tsx":"16","/home/kraven/Documents/BD/new_folder/BD/libr/src/components/rents/history-table.tsx":"17","/home/kraven/Documents/BD/new_folder/BD/libr/src/components/library-state/library-state.tsx":"18","/home/kraven/Documents/BD/new_folder/BD/libr/src/components/autor-modal/autor-modal.tsx":"19","/home/kraven/Documents/BD/new_folder/BD/libr/src/components/registration/user-register.tsx":"20"},{"size":500,"mtime":1610983173036,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1610983173036,"results":"23","hashOfConfig":"22"},{"size":1095,"mtime":1610983173036,"results":"24","hashOfConfig":"22"},{"size":2814,"mtime":1610983173036,"results":"25","hashOfConfig":"22"},{"size":2986,"mtime":1610983173036,"results":"26","hashOfConfig":"22"},{"size":2405,"mtime":1610983173036,"results":"27","hashOfConfig":"22"},{"size":630,"mtime":1610983173036,"results":"28","hashOfConfig":"22"},{"size":9059,"mtime":1610983173036,"results":"29","hashOfConfig":"22"},{"size":3403,"mtime":1610983173036,"results":"30","hashOfConfig":"22"},{"size":1588,"mtime":1610983173036,"results":"31","hashOfConfig":"22"},{"size":500,"mtime":1610983173036,"results":"32","hashOfConfig":"33"},{"size":425,"mtime":1610983173036,"results":"34","hashOfConfig":"33"},{"size":1095,"mtime":1611270282000,"results":"35","hashOfConfig":"33"},{"size":2818,"mtime":1611271277122,"results":"36","hashOfConfig":"33"},{"size":2986,"mtime":1610983173036,"results":"37","hashOfConfig":"33"},{"size":630,"mtime":1610983173036,"results":"38","hashOfConfig":"33"},{"size":9059,"mtime":1610983173036,"results":"39","hashOfConfig":"33"},{"size":3403,"mtime":1610983173036,"results":"40","hashOfConfig":"33"},{"size":1588,"mtime":1610983173036,"results":"41","hashOfConfig":"33"},{"size":5785,"mtime":1611270963294,"results":"42","hashOfConfig":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1up61q1",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"6vvtn4",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"65"},"/home/kraven/Documents/BD/libr/src/index.tsx",[],"/home/kraven/Documents/BD/libr/src/reportWebVitals.ts",[],"/home/kraven/Documents/BD/libr/src/App.tsx",[],"/home/kraven/Documents/BD/libr/src/components/navigation/my-nav-bar.tsx",["86"],"/home/kraven/Documents/BD/libr/src/components/revervation/reservation.tsx",[],"/home/kraven/Documents/BD/libr/src/components/registration/my-form.tsx",[],"/home/kraven/Documents/BD/libr/src/components/rents/rents.tsx",[],"/home/kraven/Documents/BD/libr/src/components/rents/history-table.tsx",[],"/home/kraven/Documents/BD/libr/src/components/library-state/library-state.tsx",[],"/home/kraven/Documents/BD/libr/src/components/autor-modal/autor-modal.tsx",[],"/home/kraven/Documents/BD/new_folder/BD/libr/src/index.tsx",[],["87","88"],"/home/kraven/Documents/BD/new_folder/BD/libr/src/reportWebVitals.ts",[],"/home/kraven/Documents/BD/new_folder/BD/libr/src/App.tsx",[],"/home/kraven/Documents/BD/new_folder/BD/libr/src/components/navigation/my-nav-bar.tsx",["89","90","91","92"],"/home/kraven/Documents/BD/new_folder/BD/libr/src/components/revervation/reservation.tsx",[],"/home/kraven/Documents/BD/new_folder/BD/libr/src/components/rents/rents.tsx",[],"/home/kraven/Documents/BD/new_folder/BD/libr/src/components/rents/history-table.tsx",["93"],"import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Table from \"@material-ui/core/Table\";\nimport { Button } from \"@material-ui/core\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n// import Link from \"@material-ui/core/Link\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport SimpleModal from \"../autor-modal/autor-modal\";\nimport LibraryState from \"../library-state/library-state\";\nimport { Link } from \"react-router-dom\";\n\ninterface Data {\n  name: string;\n  autor: string;\n  position: string;\n}\n\nfunction createData(name: string, autor: string, position: string): Data {\n  return { name, autor, position };\n}\n\nconst rows = [\n  createData(\"Pan tadeusz\", \"Ms\", \"A1\"),\n  createData(\"Norwegian Wood\", \"Ks\", \"C2\"),\n];\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Order = \"asc\" | \"desc\";\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string }\n) => number {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\ninterface HeadCell {\n  disablePadding: boolean;\n  id: keyof Data;\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: HeadCell[] = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Tytul\",\n  },\n  { id: \"autor\", numeric: true, disablePadding: false, label: \"autor\" },\n  { id: \"position\", numeric: true, disablePadding: false, label: \"pozycja\" },\n  { id: \"position\", numeric: true, disablePadding: false, label: \"czas_konca\" },\n];\n\ninterface EnhancedTableProps {\n  classes: ReturnType<typeof useStyles>;\n  numSelected: number;\n  onRequestSort: (\n    event: React.MouseEvent<unknown>,\n    property: keyof Data\n  ) => void;\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  order: Order;\n  orderBy: string;\n  rowCount: number;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property: keyof Data) => (\n    event: React.MouseEvent<unknown>\n  ) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\"></TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n    },\n    paper: {\n      width: \"100%\",\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      minWidth: 750,\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: \"rect(0 0 0 0)\",\n      height: 1,\n      margin: -1,\n      overflow: \"hidden\",\n      padding: 0,\n      position: \"absolute\",\n      top: 20,\n      width: 1,\n    },\n  })\n);\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState<Order>(\"asc\");\n  const [orderBy, setOrderBy] = React.useState<keyof Data>(\"autor\");\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const [page] = React.useState(0);\n  const [dense] = React.useState(false);\n  const [rowsPerPage] = React.useState(5);\n  const [open, setOpen] = React.useState(false);\n  const [isOpenLibrary, setOpenLibrary] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleCloseLib = () => {\n    setOpenLibrary(false);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof Data\n  ) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected: string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <TableContainer>\n        <Table\n          className={classes.table}\n          aria-labelledby=\"tableTitle\"\n          size={dense ? \"small\" : \"medium\"}\n          aria-label=\"enhanced table\"\n        >\n          <EnhancedTableHead\n            classes={classes}\n            numSelected={selected.length}\n            order={order}\n            orderBy={orderBy}\n            onSelectAllClick={handleSelectAllClick}\n            onRequestSort={handleRequestSort}\n            rowCount={rows.length}\n          />\n          <TableBody>\n            {stableSort(rows, getComparator(order, orderBy))\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => {\n                const isItemSelected = isSelected(row.name);\n                const labelId = `enhanced-table-checkbox-${index}`;\n\n                return (\n                  <TableRow\n                    hover\n                    onClick={(event) => handleClick(event, row.name)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.name}\n                    selected={isItemSelected}\n                  >\n                    <TableCell padding=\"checkbox\"></TableCell>\n                    <TableCell\n                      component=\"th\"\n                      id={labelId}\n                      scope=\"row\"\n                      padding=\"none\"\n                    >\n                      <Link to={`/book/${row.position}`}>{row.name}</Link>\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <Button onClick={() => handleOpen()}>{row.autor}</Button>\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <Button onClick={() => setOpenLibrary(true)}>\n                        {row.position}\n                      </Button>\n                    </TableCell>{\" \"}\n                    <TableCell align=\"right\">\n                      <Button onClick={() => setOpenLibrary(true)}>20-06-1999</Button>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <SimpleModal open={open} handleClose={handleClose} />\n      <LibraryState open={isOpenLibrary} handleClose={handleCloseLib} />\n    </div>\n  );\n}\n","/home/kraven/Documents/BD/new_folder/BD/libr/src/components/library-state/library-state.tsx",[],"/home/kraven/Documents/BD/new_folder/BD/libr/src/components/autor-modal/autor-modal.tsx",[],"/home/kraven/Documents/BD/new_folder/BD/libr/src/components/registration/user-register.tsx",["94"],"import React, { useRef } from \"react\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { Typography, Paper, Grid, Button, FormControl } from \"@material-ui/core\"\nimport { useForm, Controller } from \"react-hook-form\"\n\nexport default function UserRegister() {\n  const { handleSubmit, control, errors: fieldsErrors, watch } = useForm()\n  const onSubmit = (data: any) => {\n    console.log(data)\n  }\n  const password = useRef({})\n  password.current = watch(\"password1\", \"\")\n  return (\n    <div style={{ maxWidth: 600, margin: \"auto\" }}>\n      <Paper\n        style={{\n          padding: \"15px\",\n          marginTop: \"10vh\",\n          borderRadius: \"50px\",\n          boxShadow: \"2vh 2vh 2vh  blue\",\n          border: \"1vh\",\n        }}\n      >\n        <Typography style={{ paddingBottom: \"2vh\" }}>Rejestracja</Typography>\n        <form noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n          <FormControl fullWidth variant=\"outlined\">\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <Controller\n                  name=\"name\"\n                  as={\n                    <TextField\n                      fullWidth\n                      id=\"name\"\n                      helperText={\n                        fieldsErrors.name ? fieldsErrors.name.message : null\n                      }\n                      variant=\"outlined\"\n                      label=\"Imie\"\n                      error={fieldsErrors.name}\n                    />\n                  }\n                  control={control}\n                  defaultValue=\"\"\n                  rules={{\n                    required: \"Required\",\n                    pattern: {\n                      value: /^[A-Z]{1}[a-z]{1,}$/,\n                      message: \"Niepoprawne imie\",\n                    },\n                  }}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <Controller\n                  name=\"surname\"\n                  as={\n                    <TextField\n                      fullWidth\n                      id=\"surname\"\n                      helperText={\n                        fieldsErrors.surname\n                          ? fieldsErrors.surname.message\n                          : null\n                      }\n                      variant=\"outlined\"\n                      label=\"Nazwisko\"\n                      error={fieldsErrors.surname}\n                    />\n                  }\n                  control={control}\n                  defaultValue=\"\"\n                  rules={{\n                    required: \"Required\",\n                    pattern: {\n                      value: /^[A-Z]{1}[a-z]{1,}$/,\n                      message: \"Niepoprawne nazwisko\",\n                    },\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Controller\n                  name=\"email\"\n                  as={\n                    <TextField\n                      fullWidth\n                      id=\"email\"\n                      helperText={\n                        fieldsErrors.email ? fieldsErrors.email.message : null\n                      }\n                      variant=\"outlined\"\n                      label=\"email\"\n                      error={fieldsErrors.email}\n                    />\n                  }\n                  control={control}\n                  defaultValue=\"\"\n                  rules={{\n                    required: \"Required\",\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                      message: \"invalid email\",\n                    },\n                  }}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <Controller\n                  name=\"password1\"\n                  as={\n                    <TextField\n                      fullWidth\n                      id=\"password1\"\n                      helperText={\n                        fieldsErrors.password1\n                          ? fieldsErrors.password1.message\n                          : null\n                      }\n                      variant=\"outlined\"\n                      label=\"Haslo\"\n                      error={fieldsErrors.password1}\n                    />\n                  }\n                  control={control}\n                  defaultValue=\"\"\n                  rules={{\n                    required: \"Required\",\n                    minLength: 8,\n                  }}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <Controller\n                  name=\"password2\"\n                  as={\n                    <TextField\n                      fullWidth\n                      id=\"password2\"\n                      helperText={\n                        fieldsErrors.password2\n                          ? fieldsErrors.password2.message\n                          : null\n                      }\n                      variant=\"outlined\"\n                      label=\"Powtorz haslo\"\n                      error={fieldsErrors.password2}\n                    />\n                  }\n                  control={control}\n                  defaultValue=\"\"\n                  rules={{\n                    required: \"Required\",\n                    minLength: 8,\n                    validate: (value) =>\n                      value === password.current ||\n                      \"The passwords do not match\",\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n              </Grid>\n            </Grid>\n          </FormControl>\n        </form>\n      </Paper>\n    </div>\n  )\n}\n",{"ruleId":"95","severity":1,"message":"96","line":10,"column":10,"nodeType":"97","messageId":"98","endLine":10,"endColumn":14},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":15,"column":10,"nodeType":"105","messageId":"106","endLine":15,"endColumn":13,"suggestions":"107"},{"ruleId":"103","severity":1,"message":"104","line":16,"column":10,"nodeType":"105","messageId":"106","endLine":16,"endColumn":13,"suggestions":"108"},{"ruleId":"103","severity":1,"message":"104","line":39,"column":27,"nodeType":"105","messageId":"106","endLine":39,"endColumn":30,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":58,"column":50,"nodeType":"112","messageId":"113","endLine":58,"endColumn":52},{"ruleId":"103","severity":1,"message":"104","line":44,"column":42,"nodeType":"105","messageId":"106","endLine":44,"endColumn":45,"suggestions":"114"},{"ruleId":"103","severity":1,"message":"104","line":8,"column":27,"nodeType":"105","messageId":"106","endLine":8,"endColumn":30,"suggestions":"115"},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["116"],"no-negated-in-lhs",["117"],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["118","119"],["120","121"],["122","123"],"@typescript-eslint/ban-types","Don't use `{}` as a type. `{}` actually means \"any non-nullish value\".\n- If you want a type meaning \"any object\", you probably want `Record<string, unknown>` instead.\n- If you want a type meaning \"any value\", you probably want `unknown` instead.\n- If you want a type meaning \"empty object\", you probably want `Record<string, never>` instead.","TSTypeLiteral","bannedTypeMessage",["124","125"],["126","127"],"no-global-assign","no-unsafe-negation",{"messageId":"128","fix":"129","desc":"130"},{"messageId":"131","fix":"132","desc":"133"},{"messageId":"128","fix":"134","desc":"130"},{"messageId":"131","fix":"135","desc":"133"},{"messageId":"128","fix":"136","desc":"130"},{"messageId":"131","fix":"137","desc":"133"},{"messageId":"128","fix":"138","desc":"130"},{"messageId":"131","fix":"139","desc":"133"},{"messageId":"128","fix":"140","desc":"130"},{"messageId":"131","fix":"141","desc":"133"},"suggestUnknown",{"range":"142","text":"143"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"142","text":"144"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"145","text":"143"},{"range":"145","text":"144"},{"range":"146","text":"143"},{"range":"146","text":"144"},{"range":"147","text":"143"},{"range":"147","text":"144"},{"range":"148","text":"143"},{"range":"148","text":"144"},[555,558],"unknown","never",[568,571],[1013,1016],[1358,1361],[368,371]]